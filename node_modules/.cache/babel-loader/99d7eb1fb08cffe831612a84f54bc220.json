{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Escritorio/adalab/waggin/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DogList from \"./DogList\";\nimport Filter from \"./Filter\";\nimport data from \"../data/data.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport \"../stylesheets/App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [dogs, setDogs] = useState(data);\n  const [breed, setBreed] = useState(\"all\");\n  const [community, setCommunity] = useState(\"all\");\n\n  const handleFilter = dataFilter => {\n    if (dataFilter.key === \"breed\") {\n      setBreed(dataFilter.value);\n    } else if (dataFilter.key === \"community\") {\n      setCommunity(dataFilter.value);\n    }\n  };\n\n  const handleReset = () => {\n    setBreed(\"all\");\n    setCommunity(\"all\");\n  };\n\n  const filterDogs = dogs.filter(dogs => {\n    return breed === \"all\" ? true : dogs.breed.includes(breed);\n  }).filter(dogs => {\n    return community === \"all\" ? true : dogs.community === community;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"header__logo\",\n          src: logo,\n          alt: \"logo waggin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main__filters\",\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        className: \"filters\",\n        handleFilter: handleFilter,\n        handleReset: handleReset,\n        breed: breed,\n        community: community\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"ds7NB+76Ht2V74IGhOlGkjUETfU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adalaber/Escritorio/adalab/waggin/src/components/App.js"],"names":["React","useState","useEffect","DogList","Filter","data","Route","Switch","logo","App","dogs","setDogs","breed","setBreed","community","setCommunity","handleFilter","dataFilter","key","value","handleReset","filterDogs","filter","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,yBAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACI,IAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMe,YAAY,GAAIC,UAAD,IAAgB;AACnC,QAAIA,UAAU,CAACC,GAAX,KAAmB,OAAvB,EAAgC;AAC9BL,MAAAA,QAAQ,CAACI,UAAU,CAACE,KAAZ,CAAR;AACD,KAFD,MAEO,IAAIF,UAAU,CAACC,GAAX,KAAmB,WAAvB,EAAoC;AACzCH,MAAAA,YAAY,CAACE,UAAU,CAACE,KAAZ,CAAZ;AACD;AACF,GAND;;AAQA,QAAMC,WAAW,GAAG,MAAM;AACxBP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMM,UAAU,GAAGX,IAAI,CACpBY,MADgB,CACRZ,IAAD,IAAU;AAChB,WAAOE,KAAK,KAAK,KAAV,GAAkB,IAAlB,GAAyBF,IAAI,CAACE,KAAL,CAAWW,QAAX,CAAoBX,KAApB,CAAhC;AACD,GAHgB,EAIhBU,MAJgB,CAIRZ,IAAD,IAAU;AAChB,WAAOI,SAAS,KAAK,KAAd,GAAsB,IAAtB,GAA6BJ,IAAI,CAACI,SAAL,KAAmBA,SAAvD;AACD,GANgB,CAAnB;AAQA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,6BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,GAAG,EAAEN,IAAnC;AAAyC,UAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,YAAY,EAAEQ,YAFhB;AAGE,QAAA,WAAW,EAAEI,WAHf;AAIE,QAAA,KAAK,EAAER,KAJT;AAKE,QAAA,SAAS,EAAEE;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAmBD,CA7CD;;GAAML,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DogList from \"./DogList\";\nimport Filter from \"./Filter\";\nimport data from \"../data/data.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n  const [dogs, setDogs] = useState(data);\n  const [breed, setBreed] = useState(\"all\");\n  const [community, setCommunity] = useState(\"all\");\n\n  const handleFilter = (dataFilter) => {\n    if (dataFilter.key === \"breed\") {\n      setBreed(dataFilter.value);\n    } else if (dataFilter.key === \"community\") {\n      setCommunity(dataFilter.value);\n    }\n  };\n\n  const handleReset = () => {\n    setBreed(\"all\");\n    setCommunity(\"all\");\n  };\n\n  const filterDogs = dogs\n    .filter((dogs) => {\n      return breed === \"all\" ? true : dogs.breed.includes(breed);\n    })\n    .filter((dogs) => {\n      return community === \"all\" ? true : dogs.community === community;\n    });\n\n  return (\n    <>\n      <header className=\"header\">\n        <div>\n          <img className=\"header__logo\" src={logo} alt=\"logo waggin\" />\n        </div>\n      </header>\n      <section className=\"main__filters\">\n        <Filter\n          className=\"filters\"\n          handleFilter={handleFilter}\n          handleReset={handleReset}\n          breed={breed}\n          community={community}\n        />\n      </section>\n      {/* <DogList dogs={filterDogs} /> */}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}