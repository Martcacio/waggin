{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Escritorio/adalab/waggin/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DogList from \"./DogList\";\nimport DogCard from \"./DogCard\";\nimport Filter from \"./Filter\";\nimport data from \"../data/data.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"../images/logo-w.png\";\nimport \"../stylesheets/App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [dogs, setDogs] = useState(data);\n  const [breed, setBreed] = useState(\"all\");\n  const [community, setCommunity] = useState(\"all\");\n\n  const handleFilter = dataFilter => {\n    if (dataFilter.key === \"breed\") {\n      setBreed(dataFilter.value);\n    } else if (dataFilter.key === \"community\") {\n      setCommunity(dataFilter.value);\n    }\n  };\n\n  const handleReset = () => {\n    setBreed(\"all\");\n    setCommunity(\"all\");\n  };\n\n  const filterDogs = dogs.filter(dogs => {\n    return breeds === \"all\" ? true : dogs.breed.includes(breeds);\n  }).filter(dogs => {\n    return community === \"all\" ? true : dogs.community === community;\n  });\n\n  const renderLanding = props => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__logo\",\n            src: logo,\n            alt: \"logo waggin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__others\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"link__search\",\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"header__others--search fas fa-search\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"header__others--bone fas fa-bone\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 20\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main__filters\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          className: \"filters\",\n          handleFilter: handleFilter,\n          handleReset: handleReset,\n          breed: breed,\n          community: community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link__search\",\n          to: \"/dog/\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"link__search--button\",\n            children: \" Buscar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true);\n  };\n\n  const renderSearch = props => {\n    return /*#__PURE__*/_jsxDEV(DogList, {\n      dogs: filterDogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  };\n\n  const renderDogCard = props => {\n    const id = parseInt(props.match.params.id);\n    const dogCard = dogs.find(dog => {\n      return dog.id === id;\n    });\n    return /*#__PURE__*/_jsxDEV(DogCard, {\n      dogCard: dogCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: renderLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dog/:id\",\n      render: renderDogCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dog\",\n      render: renderSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"ds7NB+76Ht2V74IGhOlGkjUETfU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adalaber/Escritorio/adalab/waggin/src/components/App.js"],"names":["React","useState","useEffect","Link","DogList","DogCard","Filter","data","Route","Switch","logo","App","dogs","setDogs","breed","setBreed","community","setCommunity","handleFilter","dataFilter","key","value","handleReset","filterDogs","filter","breeds","includes","renderLanding","props","renderSearch","renderDogCard","id","parseInt","match","params","dogCard","find","dog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DogList from \"./DogList\";\nimport DogCard from \"./DogCard\";\nimport Filter from \"./Filter\";\nimport data from \"../data/data.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"../images/logo-w.png\";\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n    const [dogs, setDogs] = useState(data);\n    const [breed, setBreed] = useState(\"all\");\n    const [community, setCommunity] = useState(\"all\");\n\n    const handleFilter = (dataFilter) => {\n        if (dataFilter.key === \"breed\") {\n            setBreed(dataFilter.value);\n        } else if (dataFilter.key === \"community\") {\n            setCommunity(dataFilter.value);\n        }\n    };\n\n    const handleReset = () => {\n        setBreed(\"all\");\n        setCommunity(\"all\");\n    };\n\n    const filterDogs = dogs\n        .filter((dogs) => {\n            return breeds === \"all\" ? true : dogs.breed.includes(breeds);\n        })\n        .filter((dogs) => {\n            return community === \"all\" ? true : dogs.community === community;\n        });\n\n    const renderLanding = (props) => {\n        return ( <\n            >\n            <\n            header className = \"header\" >\n            <\n            div className = \"logo\" >\n            <\n            img className = \"header__logo\"\n            src = { logo }\n            alt = \"logo waggin\" / >\n            <\n            /div> <\n            div className = \"header__others\" >\n            <\n            Link className = \"link__search\"\n            to = \"/\" >\n            <\n            i class = \"header__others--search fas fa-search\" > < /i> <\n            /Link> <\n            i class = \"header__others--bone fas fa-bone\" > < /i> <\n            /div> <\n            /header> <\n            section className = \"main__filters\" >\n            <\n            Filter className = \"filters\"\n            handleFilter = { handleFilter }\n            handleReset = { handleReset }\n            breed = { breed }\n            community = { community }\n            /> <\n            Link className = \"link__search\"\n            to = \"/dog/\" >\n            <\n            p className = \"link__search--button\" > Buscar < /p> <\n            /Link> <\n            /section> <\n            />\n        );\n    };\n\n    const renderSearch = (props) => {\n        return <DogList dogs = { filterDogs }\n        />;\n    };\n\n    const renderDogCard = (props) => {\n        const id = parseInt(props.match.params.id);\n        const dogCard = dogs.find((dog) => {\n            return dog.id === id;\n        });\n        return <DogCard dogCard = { dogCard }\n        />;\n    };\n\n    return ( <\n        Switch >\n        <\n        Route exact path = \"/\"\n        component = { renderLanding }\n        /> <\n        Route path = \"/dog/:id\"\n        render = { renderDogCard }\n        /> <\n        Route path = \"/dog\"\n        render = { renderSearch }\n        /> <\n        /Switch>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}