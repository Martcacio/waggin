{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Escritorio/adalab/waggin/src/components/App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport DogList from \"./DogList\";\nimport Filter from \"./Filter\";\nimport data from \"../data/data.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport \"../stylesheets/App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App2 = () => {\n  _s();\n\n  const [dogs, setDogs] = useState(data);\n  const [breed, setBreed] = useState(\"all\");\n  const [community, setCommunity] = useState(\"all\");\n\n  const handleFilter = dataFilter => {\n    if (dataFilter.key === \"breed\") {\n      setBreed(dataFilter.value);\n    } else if (dataFilter.key === \"community\") {\n      setCommunity(dataFilter.value);\n    }\n  };\n\n  const handleReset = () => {\n    setBreed(\"all\");\n    setCommunity(\"all\");\n  };\n\n  const filterDogs = dogs.filter(dogs => {\n    return breed === \"all\" ? true : dogs.breed.includes(breed);\n  }).filter(dogs => {\n    return community === \"all\" ? true : dogs.community === community;\n  });\n\n  const renderHome = props => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__logo\",\n            src: logo,\n            alt: \"logo waggin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main__filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          className: \"filters\",\n          handleFilter: handleFilter,\n          handleReset: handleReset,\n          breed: breed,\n          community: community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const renderCard = props => {\n    const id = parseInt(props.match.params.id);\n    const selectedDog = dogs.find(dog => {\n      return dog.id === id;\n    });\n    return /*#__PURE__*/_jsxDEV(DogList, {\n      dogs: filterDogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dog/:id\",\n        render: renderCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: renderHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App2, \"ds7NB+76Ht2V74IGhOlGkjUETfU=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["/home/adalaber/Escritorio/adalab/waggin/src/components/App2.js"],"names":["React","useState","useEffect","DogList","Filter","data","Route","Switch","logo","App2","dogs","setDogs","breed","setBreed","community","setCommunity","handleFilter","dataFilter","key","value","handleReset","filterDogs","filter","includes","renderHome","props","renderCard","id","parseInt","match","params","selectedDog","find","dog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DogList from \"./DogList\";\nimport Filter from \"./Filter\";\nimport data from \"../data/data.json\";\nimport { Route, Switch } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport \"../stylesheets/App.scss\";\n\nconst App2 = () => {\n  const [dogs, setDogs] = useState(data);\n  const [breed, setBreed] = useState(\"all\");\n  const [community, setCommunity] = useState(\"all\");\n\n  const handleFilter = (dataFilter) => {\n    if (dataFilter.key === \"breed\") {\n      setBreed(dataFilter.value);\n    } else if (dataFilter.key === \"community\") {\n      setCommunity(dataFilter.value);\n    }\n  };\n\n  const handleReset = () => {\n    setBreed(\"all\");\n    setCommunity(\"all\");\n  };\n\n  const filterDogs = dogs\n    .filter((dogs) => {\n      return breed === \"all\" ? true : dogs.breed.includes(breed);\n    })\n    .filter((dogs) => {\n      return community === \"all\" ? true : dogs.community === community;\n    });\n\n  const renderHome = (props) => {\n    return (\n      <>\n        <header className=\"header\">\n          <div>\n            <img className=\"header__logo\" src={logo} alt=\"logo waggin\" />\n          </div>\n        </header>\n        <section className=\"main__filters\">\n          <Filter\n            className=\"filters\"\n            handleFilter={handleFilter}\n            handleReset={handleReset}\n            breed={breed}\n            community={community}\n          />\n        </section>\n      </>\n    );\n  };\n  const renderCard = (props) => {\n    const id = parseInt(props.match.params.id);\n    const selectedDog = dogs.find((dog) => {\n      return dog.id === id;\n    });\n    return <DogList dogs={filterDogs} />;\n  };\n  return (\n    <>\n      <Switch>\n        <Route path=\"/dog/:id\" render={renderCard} />\n        <Route exact path=\"/\" render={renderHome} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App2;\n"]},"metadata":{},"sourceType":"module"}